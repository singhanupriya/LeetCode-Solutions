//To check if the graph is connected
//Approach: Find BFS/DFS, if the number of vertices in BFS/DFS is equal to the total number of vertices, the graph is connected.

#include<iostream>
#include<vector>
#include<unordered_map>
#include<queue>

using namespace std;

vector<int> bfs(unordered_map<int,vector<int>> graph, int vertices, int start)
{
	
	vector<bool> visited(vertices,0);
	vector<int> v;
	
	queue<int> q;
	
	q.push(start);
	visited[start]=1;
	
	while(!q.empty())
	{
		int curr=q.front();
		q.pop();
		cout<<curr<<" ";
		v.push_back(curr);
		
		for(int i=0;i<(graph[curr]).size();i++)
		{
			if(visited[graph[curr][i]]==0)
			{
				visited[graph[curr][i]]=1;
				q.push(graph[curr][i]);
			}
		}
		
	}
	
	return v;
	
}



int main()
{
	unordered_map<int,vector<int>> graph;
	
	int vertices=4;
	
	graph[1]={2,3};
	graph[2]={3};
	graph[3]={};
	graph[4]={};
	
	vector<int> ans=bfs(graph,vertices,1);
	if(ans.size()==vertices)
	{
		cout<<"Connected\n";
	}
	else
	{
		cout<<"Not connected\n";
	}
	
	
	return 0;
}
