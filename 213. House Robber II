class Solution {
public:
    int max(int a,int b,int c)
    {
        if(a>=b && a>=c)
        {
            return a;
        }
        else if(b>=a && b>=c)
        {
            return b;
        }
        else
        {
            return c;
        }
    }
    
    int max(int a,int b)
    {
        if(a>=b)
        {
            return a;
        }
        return b;
    }
    
    int rob(vector<int>& nums) {
        
        int n=nums.size();
        
        if(n==0)
        {
            return 0;
        }
        
        if(n==1)
        {
            return nums[0];
        }
        
        if(n==2)
        {
            return max(nums[0],nums[1]);
        }
        
        if(n==3)
        {
            return max(nums[0],nums[1],nums[2]);
        }
        
        //0 to n-2
        int max_a=nums[0];
        int max_b=max(nums[0],nums[1]);
        
        int max_c=0;
        
        for(int i=2;i<n-1;i++)
        {
            max_c=max(max_a+nums[i],max_b);
            max_a=max_b;
            max_b=max_c;
        }
        
        //1 to n-1
        int max_d=nums[1];
        int max_e=max(nums[1],nums[2]);
        
        int max_f=0;
        
        for(int i=3;i<n;i++)
        {
            max_f=max(max_d+nums[i],max_e);
            max_d=max_e;
            max_e=max_f;
        }
        
        
        return max(max_b,max_e);
    }
};
