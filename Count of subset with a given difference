//Count of subset with a given difference
//set ={1,1,2,3} diff=1
//Ask: s1-s2=diff   where s1 and s2 are subsets of set
//We know s1+s2=sumOfArray

//Solving the eqs, give us s1=(diff+sumOfArray)/2;  // we need to find the count of subsets with sum s1.

int count(vector<int> set, int diff)
{
	int n=set.size();
	
	int sum=0;
	for(int i=0;i<n;i++)
	{
		sum=sum+set[i];
	}
	
	int s1=(diff+sum)/2;
	
	vector<vector<int>> dp(n+1,vector<int>(s1+1,0));
	
	dp[0][0]=1;
	
	for(int i=1;i<=n;i++)
	{
		dp[i][0]=1;
	}
	
	for(int i=1;i<=s1;i++)
	{
		dp[0][i]=0;
	}
	
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=s1;j++)
		{
			if(set[i-1]<=j)
			{
				dp[i][j]=dp[i-1][j-set[i-1]]  + dp[i-1][j];
				//included + excluded
			}
			else
			{
				dp[i][j]=dp[i-1][j];
			}
		}
	}
	
	return dp[n][s1];
}
