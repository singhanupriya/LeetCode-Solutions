/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* pre(vector<int>& preorder, TreeNode* root, int start, int end)
    {
        
        if(start>end)
        {
            return NULL;
        }
        
        root=new TreeNode(preorder[start]);
        
        if(start<end)
        {
            int right_index;
            
            for(int i=start;i<=end;i++)
            {
                if(preorder[i]> preorder[start])
                {
                    right_index=i;
                    break;
                }
                    
            }
            
            root->left=pre(preorder,root,start+1,right_index-1);
            root->right=pre(preorder,root,right_index,end);
            
            
        }
        return root;
        
    }
        
    
    
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        
        if(preorder.size()==0)
        {
            return NULL;
        }
        
        TreeNode* root;
        return pre(preorder,root,0,preorder.size()-1);
        
        
    }
};
