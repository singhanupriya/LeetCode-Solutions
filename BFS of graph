//BFS traversal of a graph
#include<iostream>
#include<vector>
#include<unordered_map>
#include<queue>

using namespace std;

void bfs(unordered_map<int, vector<int>>& graph,vector<bool>& visited, int start)
{
	
	
	queue<int> q;
	
	q.push(start);
	visited[start]=1;
	
	
	
	while(!q.empty())
	{
		int l=q.size();
		
		
		for(int i=0;i<l;i++)
		{
			int ans=q.front();
			q.pop();
			cout<<ans<<" ";
			
			
			
			for(int i=0;i<(graph[ans]).size();i++)
			{
				
				if(visited[graph[ans][i]]==0)
				{
					
					q.push(graph[ans][i]);
					visited[graph[ans][i]]=1;
				}
			}
				//cout<<"\n";
		}
		
		
		
		cout<<"\n";
	}
	
	
	
	
	
}



int main()
{
	unordered_map<int,vector<int>> graph;
	vector<bool> visited (7,0);
	
	
	
	
	//Adjacency list
	graph[0]={1,2,3,4};
	graph[1]={5};
	graph[2]={6};
	graph[3]={6};
	graph[4]={5};
	graph[5]={};
	graph[6]={};
	

	
	
	
	bfs(graph,visited,0);
	
	
	
	
	
	
	return 0;
}
