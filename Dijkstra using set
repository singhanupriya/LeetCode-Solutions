//Dijkstra using set

#include<iostream>
#include<set>

#include<vector>
#include<climits>

using namespace std;

void dijkstra(vector<vector<int>> adj, int src, int N)
{
	
	vector<int> dist(N,INT_MAX);
	dist[src]=0;
	set<pair<int,int>> s;
	s.insert(make_pair(dist[src],src));
	
	while(!s.empty())
	{
		
		auto it=*(s.begin());
		int u=it.second;
		
		s.erase(it);  //remove the first element from set
		
		for(int v=0;v<N;v++)
		{
			
			if(adj[u][v]!=0 && adj[u][v]!=INT_MAX && dist[v]>dist[u]+adj[u][v])
			{
				
				
				auto it=s.find(make_pair(dist[v],v)); 
				if(it!=s.end())
				{
					s.erase(it);  //delete if the element is already in the set
				}
				
				dist[v]=dist[u]+adj[u][v];
				s.insert(make_pair(dist[v],v));   //add it to the set
			}
			
			
		}
		
	}
	
	for(int i=0;i<N;i++)
	{
		cout<<dist[i]<<" ";
	}
	
}

int main()
{

	vector<vector<int>> adj={
		{0,4,1,INT_MAX,INT_MAX},
		{INT_MAX,0,INT_MAX,INT_MAX,4},
		{INT_MAX,2,0,4,INT_MAX},
		{INT_MAX,INT_MAX,INT_MAX,0,4},
		{INT_MAX,INT_MAX,INT_MAX,INT_MAX,0}
	
	
	};
	
	int N=5;
	dijkstra(adj,0,N);
		
	
	return 0;
}
