//Time: O(n)
//Space: O(n)

class Solution {
public:
    int max(int a,int b)
    {
        if(a>=b)
        {
            return a;
        }
        return b;
    }
    
    int rob(vector<int>& nums) {
        
        int n=nums.size();
        
        if(n==0)
        {
            return 0;
        }
        
        if(n==1)
        {
            return nums[0];
        }
        
        vector<int> dp(n);
        
        dp[0]=nums[0];
        dp[1]=max(nums[0],nums[1]);
        
        for(int i=2;i<n;i++)
        {
            dp[i]=max(dp[i-2]+nums[i],dp[i-1]);
        }
        
        return dp[n-1];
        
        
        
    }
};



//Time: O(n)
//Space: O(1)
class Solution {
public:
    int max(int a,int b)
    {
        if(a>=b)
        {
            return a;
        }
        return b;
    }
    
    int rob(vector<int>& nums) {
        
        int n=nums.size();
        
        if(n==0)
        {
            return 0;
        }
        
        if(n==1)
        {
            return nums[0];
        }
        
       
        
        int max_a=nums[0];
        int max_b=max(nums[0],nums[1]);
        int max_i=0;
        
        for(int i=2;i<n;i++)
        {
            max_i=max(max_a+nums[i],max_b);
            max_a=max_b;
            max_b=max_i;
        }
        
        return max_b;
        
        
        
    }
};
