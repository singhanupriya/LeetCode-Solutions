class Solution {
public:
    bool canPartition(vector<int>& nums) {
        
        int sum=0;
        int n=nums.size();
        
        for(int i=0;i<n;i++)
        {
            sum=sum+nums[i];
        }
        
        if(sum%2!=0)
        {
            return false;
        }
        
        int w=sum/2;
        
        vector<vector<bool>> dp(n+1, vector<bool>(w+1));
        
        dp[0][0]=1;
        
        for(int i=1;i<=n;i++)
        {
            dp[i][0]=1;
        }
        
        for(int i=1;i<=w;i++)
        {
            dp[0][i]=0;
        }
        
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=w;j++)
            {
                if(nums[i-1]<=j)
                {
                    dp[i][j]=dp[i-1][j-nums[i-1]] || dp[i-1][j];
                }
                else
                {
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        
        return dp[n][w];
    }
};
